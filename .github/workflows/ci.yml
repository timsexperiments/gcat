name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6"

      - name: Go Version
        run: go version

      - name: Tidy modules
        run: make tidy

      - name: install golang ci lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linting
        run: make lint

  test:
    runs-on: ubuntu-latest
    env:
      COVERAGE_THRESHOLD: 80
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6"

      - name: Go Version
        run: go version

      - name: Tidy modules
        run: make tidy

      - name: Install X11 dependencies
        run: sudo apt update && sudo apt install -y libx11-dev xorg-dev

      - name: Run tests and generate coverage
        run: make coverage

      - name: Check project coverage threshold (warning only)
        run: |
          COVERAGE=$(go tool cover -func=coverage/coverage.out | grep total: | awk '{print $3}' | sed 's/%//')
          echo "Total coverage is: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "WARNING: Coverage ($COVERAGE%) is below the threshold of ${COVERAGE_THRESHOLD}%."
          else
            echo "Coverage ($COVERAGE%) meets the threshold of ${COVERAGE_THRESHOLD}%."
          fi

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6"

      - name: Go Version
        run: go version

      - name: Tidy modules
        run: make tidy

      - name: Build the application
        run: make build
